apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: wordpress
  namespace: wordpress
  annotations:
    serving.knative.dev/creator: kubernetes-admin
    serving.knative.dev/lastModifier: system:serviceaccount:flux-system:kustomize-controller
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/maxScale: "12"
    spec:
      containerConcurrency: 50
      timeoutSeconds: 25
      containers:
      - image: us-west1-docker.pkg.dev/eandersons-net/knative-wordpress/wordpress:2022-09-04
        resources:
          requests:
            cpu: 100m
            memory: 250M
          limits:
            cpu: 1
            memory: 450M
        livenessProbe:
          httpGet:
            path: /
          periodSeconds: 1
          failureThreshold: 5
          initialDelaySeconds: 3
        env:
        - name: WORDPRESS_DB_HOST
          value: mysql-db-mysql
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-root
              key: PASSWORD
        - name: WORDPRESS_DB_USER
          value: wordpress
        - name: WORDPRESS_DB_NAME
          value: wordpress_db
        - name: HTTP_X_FORWARDED_PROTO
          value: https
        - name: WORDPRESS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: auth_key
        - name: WORDPRESS_SECURE_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: secure_auth_key
        - name: WORDPRESS_LOGGED_IN_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: logged_in_key
        - name: WORDPRESS_NONCE_KEY
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: nonce_key
        - name: WORDPRESS_AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: auth_salt
        - name: WORDPRESS_SECURE_AUTH_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: secure_auth_salt
        - name: WORDPRESS_LOGGED_IN_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: logged_in_salt
        - name: WORDPRESS_NONCE_SALT
          valueFrom:
            secretKeyRef:
              name: wordpress-config
              key: nonce_salt
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: wp-bucket
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: wp-bucket
              key: AWS_SECRET_ACCESS_KEY
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: wp-bucket
              key: BUCKET_NAME
        - name: BUCKET_REGION
          valueFrom:
            configMapKeyRef:
              name: wp-bucket
              key: BUCKET_REGION
        - name: AWS_HOST
          valueFrom:
            configMapKeyRef:
              name: wp-bucket
              key: BUCKET_HOST
        - name: AWS_PORT
          valueFrom:
            configMapKeyRef:
              name: wp-bucket
              key: BUCKET_PORT
        - name: WORDPRESS_CONFIG_EXTRA
          value: |
            // Configure S3-Uploads with AWS settings from environment
            define( 'S3_UPLOADS_KEY', getenv('AWS_ACCESS_KEY_ID') );
            define( 'S3_UPLOADS_SECRET', getenv('AWS_SECRET_ACCESS_KEY') );
            define( 'S3_UPLOADS_BUCKET', getenv('BUCKET_NAME') );
            define( 'S3_UPLOADS_REGION', getenv('BUCKET_REGION') );
            // Make WordPress serve all the media, rather than redirecting to S3/Ceph
            define( 'S3_UPLOADS_DISABLE_REPLACE_UPLOAD_URL', true );
        ports:
        - containerPort: 80
          name: http1
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: off-by-one
  namespace: wordpress
spec:
  dnsNames:
  - off-by-one.dev
  issuerRef:
    kind: ClusterIssuer
    name: letsencrypt-prod
  secretName: off-by-one
---
apiVersion: v1
kind: Service
metadata:
  name: s3
  namespace: wordpress
spec:
  type: ExternalName
  externalName: rook-ceph-rgw-objects.rook-ceph.svc
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: wordpress-site
  namespace: wordpress
  annotations:
    projectcontour.io/ingress.class: contour-external
  labels:
    projectcontour.io/ingress.class: contour-external
spec:
  virtualhost:
    fqdn: off-by-one.dev
    tls:
      secretName: off-by-one
  routes:
  - services:
    - name: knative-external
      port: 443
      protocol: tls
    requestHeadersPolicy:
      set:
      - name: Host
        value: wordpress.wordpress.svc.cluster.local
  - services:
    - name: s3
      port: 80
    conditions:
    - prefix: /wp-content/uploads/
    - header:
        name: Content-Type
        present: false
    pathRewritePolicy:
      replacePrefix:
      - replacement: /wordpress-store/uploads/
      
